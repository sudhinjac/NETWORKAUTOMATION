go get google.golang.org/grpc
go get github.com/openconfig/gnmi/proto/gnmi
go get github.com/segmentio/kafka-go

# In one terminal:
bin/zookeeper-server-start.sh config/zookeeper.properties
bin/zookeeper-server-start.sh config/zookeeper.properties
bin/zookeeper-server-start.sh config/zookeeper.properties
# In another:
bin/kafka-server-start.sh config/server.properties
rm -rf /tmp/kafka-logskafka-topics.sh --create --topic router-metrics --bootstrap-server localhost:9092 --partitions 3 --replication-factor 1
# Create topic:
bin/kafka-topics.sh --create --topic bgp-status --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

bin/kafka-server-start.sh config/server.properties
ðŸ“¡ Subscribed to gNMI BGP state stream. Sending to Kafka...
âœ… Sent to Kafka: {"timestamp":..., "path": ..., "value": ...}

bin/kafka-console-consumer.sh --topic bgp-status --bootstrap-server localhost:9092 --from-beginning

bin/kafka-console-consumer.sh --topic bgp-status --from-beginning --bootstrap-server localhost:9092
udhin@sudhin:/tmp/kafka-logs/bgp-status-0$
sudhin@sudhin:/tmp/kafka-logs/bgp-status-0$ pwd
/tmp/kafka-logs/bgp-status-0
sudhin@sudhin:/tmp/kafka-logs/bgp-status-0$

bin/kafka-topics.sh --create --topic bgp-telemetry --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

cd ~/your-go-project/
go mod init your-module-name   # if you haven't initialized Go modules yet
go get github.com/Shopify/sarama

go get github.com/Shopify/sarama@v1.37.0

go clean -modcache

go mod tidy